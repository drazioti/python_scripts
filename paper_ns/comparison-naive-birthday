We provide a comparison between exhaustive search and our attack.
With exhaustive searc we mean the following attack

Pseudocode of Naive exhaustive search
Input  : c,H
 Output : m
============
01. for msg in [all messages with hamming weight H]:
02.   if encrypt(msg)==c:
03.        return msg

and the actual python code is :
=================================================
def naive(n,hamming,c):
    import itertools
    
    def bin2int(a):
        return int("".join(str(x) for x in a),2)

    start = time.time()
    for bits in itertools.combinations(range(n+1), hamming):
        s = ['0'] * (n+1)
        if bits[0]==0:
            for bit in bits:
                s[bit] = '1'
            msg = bin2int(str(''.join(s)))
            #print msg,''.join(s)
            if X.encrypt(msg,p,u) == c:
                print msg #, str(''.join(s))
                end = time.time()-start
                print end
                return

=================================================
We consider the case n = 84 i.e. the prime p has 400 bits

#### Time (in seconds) for our attack (first column) and exhastive search (second column)

#### Hamming = 4

           message                     our attack -- exhaustive search
_____________________________________________________________________
m1 = 2^(n)+2^(n-1)+2^(70)+2^(60), time : 0.47s  -- 0.26s
m2 = 2^(n)+2^(70)+2^(60)+2^(55),  time : 0.299s -- 9.17s
m3 = 2^(n)+2^(67)+2^(54)+2^(44),  time : 0.35s  -- 10.5s
m4 = 2^(n)+2^(51)+2^(40)+2^(38),  time : 2.43s  -- 16.96s
m5 = 2^(n)+2^(41)+2^(40)+2^(34),  time : 0.3s   -- 18.32s
m6 = 2^(n)+2^(n-1)+2^(10)+2^(9),  time : 0.61s  -- 0.8s
m7 = 2^(n)+2^(n-1)+2^(2)+2^(1),   time : 4.5s   -- 0.88s
m8 = 2^(n)+2^(30)+2^(20)+2^(10),  time : 0.85s  -- 21.06s
  
#### Hamming = 5

m1 = 2^(n)+2^(n-1)+2^(70)+2^(60)+2^(59),     time : 1.45s -- 8.63s
m2 = 2^(n)+2^(70)+2^(60)+2^(55)+2^(53),      time : 5.91s -- at least 5min (aborted after 5 min)
m3 = 2^(n)+2^(n-1)+2^(n-2)+2^(n-3)+2^(n-4),  time : 1.4s --  0.1s
m4 = 2^(n)+2^(n-1)+2^(40)+2^(2)+2^(1),       time : 6.5s --  19.41s
m5 = 2^(n)+2^(n-2)+2^(30)+2^(5)+2^(3),       time : 1.23s -- 40.84s

#### Hamming = 6

m1 = 2^(n)+2^(n-1)+2^(70)+2^(60)+2^(59)+2^(57), time : 3.43s  -- 174s
m2 = 2^(n)+2^(70)+2^(60)+2^(58)+2^(57)+2^(56),  time : 13.13s -- at least 5min (aborted after 5 min)
m3 = 2^(n)+2^(70)+2^(5)+2^(5)+2^(3)+2^(0),      time :  2.56s -- at least 5min (aborted after 5 min)

#### Hamming = 7

m1 = 2^(n)+2^(n-1)+2^(n-2)+2^(70)+2^(60)+2^(59)+2^(57), time :  43s   -- at least 5min (aborted after 5 min)

